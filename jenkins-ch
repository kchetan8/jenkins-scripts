pipeline {
    agent any
 stages {
     stage('Git Checkout') {
        steps {
            git credentialsId: 'Githubpersonal8', url: 'https://github.com/kchetan8/jenkins-demo-api.git' 
        }
    }
    stage('Maven Build') {
        steps {
            bat '''mvn clean install -DskipMunitTests'''
        }
    }
    stage('CH Sandbox Deployment') {
        steps {

            withCredentials([usernamePassword(credentialsId: 'Anypoint14', passwordVariable: 'mule-password', usernameVariable: 'mule-username')]) {
    bat '''mvn package deploy -DmuleDeploy -DskipMunitTests -Dusername=%mule-username% -Dpassword=%mule-password% -Dapp.name=%app-name%-sandbox -Dregion=%region% -Denvironment=%environment%'''
}
            
        }
    }
    stage('Deploy approval'){
        steps {
        input message: 'Deploy to UAT ?', ok: 'Approve'
        }
        
    }
    stage('CH UAT Deployment'){
        steps {
        withCredentials([usernamePassword(credentialsId: 'Anypoint14', passwordVariable: 'mule-password', usernameVariable: 'mule-username')]) {
    bat '''mvn deploy -DmuleDeploy -DskipMunitTests -Dusername=%mule-username% -Dpassword=%mule-password% -Dapp.name=%app-name%-uat -Dregion=%region% -Denvironment=UAT'''
}
        }
        
    }
 }
 post {
        always {
            deleteDir() /* clean up our workspace */
        }
        success {
           emailext body: '''Hi
Your build #%BUILD_NUMBER%
Please check cloudhub logs''', recipientProviders: [buildUser()], subject: '%git-repo-name% #%BUILD_NUMBER% Build is deployed', to: 'kawadechetan8@gmail.com'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            emailext body: '''Hi
Your build #%BUILD_NUMBER%
Please check console logs at %BUILD_URL%''', recipientProviders: [buildUser()], subject: '%git-repo-name% #%BUILD_NUMBER% Build failed', to: 'kawadechetan8@gmail.com'
        }
        changed {
            echo 'Things were different before...'
        }
    }
}

